@model Tuple<RakietaLogikaBiznesowa.Models.User, RakietaLogikaBiznesowa.Models.Address>

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(tuple => tuple.Item1.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.PESEL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.PESEL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.PESEL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(tuple => tuple.Item1.Sex, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item1.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.PlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.PlaceOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.IDNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.SecondAddress, "SecondAddress", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SecondAddress", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.SecondAddress, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.JoinDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.JoinDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.ReferId, "ReferId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReferId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item1.ReferId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.ContractorId, "ContractorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContractorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item1.ContractorId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.LastEditTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.LastEditTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.LastEditTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.LastEditor, "LastEditor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LastEditor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.LastEditor, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.MoneyboxId, "MoneyboxId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MoneyboxId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item1.MoneyboxId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.WorkerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.WorkerId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.WorkerId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.ContractId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.ContractId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.ContractId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.HouseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.HouseNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.ApartmentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.ApartmentNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.ApartmentNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.Province, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(tuple => tuple.Item2.Province, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item2.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(tuple => tuple.Item2.Country, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item2.Country, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
