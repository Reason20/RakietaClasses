@model RakietaLogikaBiznesowa.Models.HelpDesk.OldAndNewAnswer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Helpdesk</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OldAnswer.Id)
        @Html.HiddenFor(model => model.OldAnswer.Status)
        @Html.HiddenFor(model => model.OldAnswer.TypeOf)
        @Html.HiddenFor(model => model.OldAnswer.Title)
        @Html.HiddenFor(model => model.OldAnswer.Text)
        @Html.HiddenFor(model => model.OldAnswer.Date)
        @Html.HiddenFor(model => model.OldAnswer.isAnswered)
        @Html.HiddenFor(model => model.OldAnswer.AnswerDate)
        @Html.HiddenFor(model => model.OldAnswer.AnswerText)
        @Html.HiddenFor(model => model.OldAnswer.RecipientId)
        @Html.HiddenFor(model => model.OldAnswer.WorkerId)
        @Html.HiddenFor(model => model.NewAnswer.Id)
        @Html.HiddenFor(model => model.NewAnswer.TypeOf)
        @Html.HiddenFor(model => model.NewAnswer.Title)
        @Html.HiddenFor(model => model.NewAnswer.Text)
        @Html.HiddenFor(model => model.NewAnswer.Date)
        @Html.HiddenFor(model => model.NewAnswer.RecipientId)
        <div class="form-group">
            @Html.LabelFor(model => model.NewAnswer.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.NewAnswer.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewAnswer.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewAnswer.isAnswered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.NewAnswer.isAnswered)
                    @Html.ValidationMessageFor(model => model.NewAnswer.isAnswered, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewAnswer.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewAnswer.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewAnswer.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
